#!/usr/bin/env ruby

require 'fileutils'
$LOAD_PATH << File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'gems_parser'

if ARGV.empty?
  puts "Invalid usage!"
  puts "./bin/gem_downloader gems.rb"
  exit 0
end

gp = GemsParser.parse(File.read(ARGV[0]))
index = 0
file_format = "%0#{(gp.target_files.length - 1).to_s.length}d-%s-%s.gem"

FileUtils.remove_dir(gp.target_dir, true)
Dir.mkdir(gp.target_dir)
Dir.chdir(gp.target_dir) {
  gp.target_files.each { |n, v, an|
    path = sprintf(file_format, index, n, v)
    loop {
      if v.include?('gem-fetch-')
        actual_version = v.dup
        fail if actual_version.slice!('gem-fetch-').nil?
        output = `gem fetch #{n} --version #{actual_version}`.strip.split(' ')
        fail 'Unexpected output: #{output}' unless output[0] == 'Downloaded'
        fail 'Unexpected output: #{output}' unless output.size == 2
        version_and_platform_string = output[1].dup
        if version_and_platform_string.slice!("#{n}-").nil?
          fail "Unexpected gem name: #{output[1]}"
        end
        path = sprintf(file_format, index, n, version_and_platform_string)
        downloaded_gem_path = "#{output[1]}.gem"
        `mv #{downloaded_gem_path} #{path}`
      else
        `curl -o #{path} -L http://rubygems.org/downloads/#{n}-#{v}.gem`
      end
      `gem install --explain #{path} --no-ri --no-rdoc`
      break if $?.success?
      sleep 1
    }
    index += 1
  }
}
